{"ast":null,"code":"import { isValidElement, cloneElement, createElement } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\nfunction hasChildren(node, checkLength) {\n  if (!node) return false;\n  const base = node.props ? node.props.children : node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n}\nfunction getChildren(node) {\n  if (!node) return [];\n  return node.props ? node.props.children : node.children;\n}\nfunction hasValidReactChildren(children) {\n  if (Object.prototype.toString.call(children) !== '[object Array]') return false;\n  return children.every(child => isValidElement(child));\n}\nfunction getAsArray(data) {\n  return Array.isArray(data) ? data : [data];\n}\nfunction mergeProps(source, target) {\n  const newTarget = {\n    ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n}\nexport function nodesToString(children, i18nOptions) {\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions.transSupportBasicHtmlNodes && i18nOptions.transKeepBasicHtmlNodesFor ? i18nOptions.transKeepBasicHtmlNodesFor : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (typeof child === 'string') {\n      stringNode += \"\".concat(child);\n    } else if (isValidElement(child)) {\n      const childPropsCount = Object.keys(child.props).length;\n      const shouldKeepChild = keepArray.indexOf(child.type) > -1;\n      const childChildren = child.props.children;\n      if (!childChildren && shouldKeepChild && childPropsCount === 0) {\n        stringNode += \"<\".concat(child.type, \"/>\");\n      } else if (!childChildren && (!shouldKeepChild || childPropsCount !== 0)) {\n        stringNode += \"<\".concat(childIndex, \"></\").concat(childIndex, \">\");\n      } else if (child.props.i18nIsDynamicList) {\n        stringNode += \"<\".concat(childIndex, \"></\").concat(childIndex, \">\");\n      } else if (shouldKeepChild && childPropsCount === 1 && typeof childChildren === 'string') {\n        stringNode += \"<\".concat(child.type, \">\").concat(childChildren, \"</\").concat(child.type, \">\");\n      } else {\n        const content = nodesToString(childChildren, i18nOptions);\n        stringNode += \"<\".concat(childIndex, \">\").concat(content, \"</\").concat(childIndex, \">\");\n      }\n    } else if (child === null) {\n      warn(\"Trans: the passed in value is invalid - seems you passed in a null child.\");\n    } else if (typeof child === 'object') {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? \"\".concat(keys[0], \", \").concat(format) : keys[0];\n        stringNode += \"{{\".concat(value, \"}}\");\n      } else {\n        warn(\"react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.\", child);\n      }\n    } else {\n      warn(\"Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.\", child);\n    }\n  });\n  return stringNode;\n}\nfunction renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n  const data = {};\n  function getData(childs) {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (typeof child === 'string') return;\n      if (hasChildren(child)) getData(getChildren(child));else if (typeof child === 'object' && !isValidElement(child)) Object.assign(data, child);\n    });\n  }\n  getData(children);\n  const ast = HTML.parse(\"<0>\".concat(targetString, \"</0>\"));\n  const opts = {\n    ...data,\n    ...combinedTOpts\n  };\n  function renderInner(child, node, rootReactNode) {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 ? childs : mappedChildren;\n  }\n  function pushTranslatedJSX(child, inner, mem, i, isVoid) {\n    if (child.dummy) child.children = inner;\n    mem.push(cloneElement(child, {\n      ...child.props,\n      key: i\n    }, isVoid ? undefined : inner));\n  }\n  function mapAST(reactNode, astNode, rootReactNode) {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      const translationContent = node.children && node.children[0] && node.children[0].content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (!tmp && rootReactNode.length === 1 && rootReactNode[0][node.name]) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && typeof child === 'object' && child.dummy && !isElement;\n        const isKnownComponent = typeof children === 'object' && children !== null && Object.hasOwnProperty.call(children, node.name);\n        if (typeof child === 'string') {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          mem.push(cloneElement(child, {\n            ...child.props,\n            key: i\n          }, inner));\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: \"\".concat(node.name, \"-\").concat(i)\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: \"\".concat(node.name, \"-\").concat(i)\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(\"<\".concat(node.name, \" />\"));\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(\"<\".concat(node.name, \">\").concat(inner, \"</\").concat(node.name, \">\"));\n          }\n        } else if (typeof child === 'object' && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else if (node.children.length === 1 && translationContent) {\n          mem.push(cloneElement(child, {\n            ...child.props,\n            key: i\n          }, translationContent));\n        } else {\n          mem.push(cloneElement(child, {\n            ...child.props,\n            key: i\n          }));\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: \"\".concat(node.name, \"-\").concat(i)\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  }\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n}\nexport function Trans(_ref) {\n  let {\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  } = _ref;\n  const i18n = i18nFromProps || getI18n();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using i18nextReactModule');\n    return children;\n  }\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n  if (context) tOptions.context = context;\n  const reactI18nextOptions = {\n    ...getDefaults(),\n    ...(i18n.options && i18n.options.react)\n  };\n  let namespaces = ns || t.ns || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  const defaultValue = defaults || nodesToString(children, reactI18nextOptions) || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue);\n  const interpolationOverride = values ? tOptions.interpolation : {\n    interpolation: {\n      ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  const combinedTOpts = {\n    ...tOptions,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  const content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent !== undefined ? parent : reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}","map":{"version":3,"names":["isValidElement","cloneElement","createElement","HTML","warn","warnOnce","getDefaults","getI18n","hasChildren","node","checkLength","base","props","children","length","getChildren","hasValidReactChildren","Object","prototype","toString","call","every","child","getAsArray","data","Array","isArray","mergeProps","source","target","newTarget","assign","nodesToString","i18nOptions","stringNode","childrenArray","keepArray","transSupportBasicHtmlNodes","transKeepBasicHtmlNodesFor","forEach","childIndex","concat","childPropsCount","keys","shouldKeepChild","indexOf","type","childChildren","i18nIsDynamicList","content","format","clone","value","renderNodes","targetString","i18n","combinedTOpts","shouldUnescape","emptyChildrenButNeedsHandling","RegExp","join","test","getData","childs","ast","parse","opts","renderInner","rootReactNode","mappedChildren","mapAST","pushTranslatedJSX","inner","mem","i","isVoid","dummy","push","key","undefined","reactNode","astNode","reactNodes","astNodes","reduce","translationContent","services","interpolator","interpolate","language","tmp","parseInt","name","attrs","isElement","isValidTranslationWithChildren","voidElement","isEmptyTransWithHTML","isKnownComponent","hasOwnProperty","Number","isNaN","parseFloat","wrapTextNodes","transWrapTextNodes","unescape","result","Trans","_ref","count","parent","i18nKey","context","tOptions","values","defaults","components","ns","i18nFromProps","t","tFromProps","additionalProps","bind","k","reactI18nextOptions","options","react","namespaces","defaultNS","defaultValue","transEmptyNodeValue","hashTransKey","interpolationOverride","interpolation","prefix","suffix","translation","useAsParent","defaultTransParent"],"sources":["/home/niels/Documents/nielsminssen.github.io/node_modules/react-i18next/dist/es/TransWithoutContext.js"],"sourcesContent":["import { isValidElement, cloneElement, createElement } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\nfunction hasChildren(node, checkLength) {\n  if (!node) return false;\n  const base = node.props ? node.props.children : node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n}\nfunction getChildren(node) {\n  if (!node) return [];\n  return node.props ? node.props.children : node.children;\n}\nfunction hasValidReactChildren(children) {\n  if (Object.prototype.toString.call(children) !== '[object Array]') return false;\n  return children.every(child => isValidElement(child));\n}\nfunction getAsArray(data) {\n  return Array.isArray(data) ? data : [data];\n}\nfunction mergeProps(source, target) {\n  const newTarget = {\n    ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n}\nexport function nodesToString(children, i18nOptions) {\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions.transSupportBasicHtmlNodes && i18nOptions.transKeepBasicHtmlNodesFor ? i18nOptions.transKeepBasicHtmlNodesFor : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (typeof child === 'string') {\n      stringNode += `${child}`;\n    } else if (isValidElement(child)) {\n      const childPropsCount = Object.keys(child.props).length;\n      const shouldKeepChild = keepArray.indexOf(child.type) > -1;\n      const childChildren = child.props.children;\n      if (!childChildren && shouldKeepChild && childPropsCount === 0) {\n        stringNode += `<${child.type}/>`;\n      } else if (!childChildren && (!shouldKeepChild || childPropsCount !== 0)) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (child.props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (shouldKeepChild && childPropsCount === 1 && typeof childChildren === 'string') {\n        stringNode += `<${child.type}>${childChildren}</${child.type}>`;\n      } else {\n        const content = nodesToString(childChildren, i18nOptions);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      }\n    } else if (child === null) {\n      warn(`Trans: the passed in value is invalid - seems you passed in a null child.`);\n    } else if (typeof child === 'object') {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n      } else {\n        warn(`react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.`, child);\n      }\n    } else {\n      warn(`Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.`, child);\n    }\n  });\n  return stringNode;\n}\nfunction renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n  const data = {};\n  function getData(childs) {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (typeof child === 'string') return;\n      if (hasChildren(child)) getData(getChildren(child));else if (typeof child === 'object' && !isValidElement(child)) Object.assign(data, child);\n    });\n  }\n  getData(children);\n  const ast = HTML.parse(`<0>${targetString}</0>`);\n  const opts = {\n    ...data,\n    ...combinedTOpts\n  };\n  function renderInner(child, node, rootReactNode) {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 ? childs : mappedChildren;\n  }\n  function pushTranslatedJSX(child, inner, mem, i, isVoid) {\n    if (child.dummy) child.children = inner;\n    mem.push(cloneElement(child, {\n      ...child.props,\n      key: i\n    }, isVoid ? undefined : inner));\n  }\n  function mapAST(reactNode, astNode, rootReactNode) {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      const translationContent = node.children && node.children[0] && node.children[0].content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (!tmp && rootReactNode.length === 1 && rootReactNode[0][node.name]) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && typeof child === 'object' && child.dummy && !isElement;\n        const isKnownComponent = typeof children === 'object' && children !== null && Object.hasOwnProperty.call(children, node.name);\n        if (typeof child === 'string') {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          mem.push(cloneElement(child, {\n            ...child.props,\n            key: i\n          }, inner));\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if (typeof child === 'object' && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else if (node.children.length === 1 && translationContent) {\n          mem.push(cloneElement(child, {\n            ...child.props,\n            key: i\n          }, translationContent));\n        } else {\n          mem.push(cloneElement(child, {\n            ...child.props,\n            key: i\n          }));\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: `${node.name}-${i}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  }\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n}\nexport function Trans(_ref) {\n  let {\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  } = _ref;\n  const i18n = i18nFromProps || getI18n();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using i18nextReactModule');\n    return children;\n  }\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n  if (context) tOptions.context = context;\n  const reactI18nextOptions = {\n    ...getDefaults(),\n    ...(i18n.options && i18n.options.react)\n  };\n  let namespaces = ns || t.ns || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  const defaultValue = defaults || nodesToString(children, reactI18nextOptions) || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue);\n  const interpolationOverride = values ? tOptions.interpolation : {\n    interpolation: {\n      ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  const combinedTOpts = {\n    ...tOptions,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  const content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent !== undefined ? parent : reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}